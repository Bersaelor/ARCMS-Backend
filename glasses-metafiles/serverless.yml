service: Glasses-Meta 
#app: your-app-name
#tenant: your-tenant-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

custom:
  myStage: ${opt:stage, self:provider.stage}
  myEnvironment:
    MESSAGE:
      prod: "This is production environment"
      dev: "This is development environment"
  users-role: arn:aws:iam::338756162532:role/ARCMSLambda

provider:
  name: aws
  stage: dev
  runtime: nodejs10.x
  region: eu-central-1
  usagePlan:
    quota:
      limit: 10000
      offset: 2
      period: MONTH
    throttle:
      burstLimit: 200
      rateLimit: 100
  environment:
    CANDIDATE_TABLE: arcms-brandUserOrders-${self:custom.myStage}
    API_HOST_URL: https://api.looc.io/metafiles
    MODEL_BUCKET: ar-glasses-models
    STAGE: ${self:custom.myStage}
    ACCESS_STORE: store
    ACCESS_MANAGER: manager
    ACCESS_ADMIN: admin

package:
  individually: true
  exclude:
    - "**/*"
    - node_modules/**

functions:
  get-list:
    handler: metafiles.getList
    role: ${self:custom.users-role}
    memorySize: 512
    description: Get an array of files for a given brand, category, model
    package:
      include:
        - metafiles.js
        - shared/**
    events:
      - http:
          path: /{brand}/category/{category}/{modelid}/files
          method: get
          cors: true
          request:
            parameters:
              paths:
                brand: true
                category: true
                modelid: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:eu-central-1:338756162532:userpool/eu-central-1_Qg8GXUJ2v

  request-upload:
    handler: metafiles.getUploadURL
    role: ${self:custom.users-role}
    memorySize: 512
    description: Get an upload url for uploading a new file
    package:
      include:
        - metafiles.js
        - shared/**
    events:
      - http:
          path: /{brand}/category/{category}/{modelid}/newUpload
          method: get
          cors: true
          request:
            parameters:
              paths:
                brand: true
                category: true
                modelid: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:eu-central-1:338756162532:userpool/eu-central-1_Qg8GXUJ2v

  request-download:
    handler: metafiles.requestFile
    role: ${self:custom.users-role}
    memorySize: 512
    description: Get a download url for a given file
    package:
      include:
        - metafiles.js
        - shared/**
    events:
      - http:
          path: /{brand}/category/{category}/{modelid}/files/{filename}
          method: get
          cors: true
          request:
            parameters:
              paths:
                brand: true
                category: true
                modelid: true
                filename: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:eu-central-1:338756162532:userpool/eu-central-1_Qg8GXUJ2v

  request-file-deletion:
    handler: metafiles.requestFileDeletion
    role: ${self:custom.users-role}
    memorySize: 512
    description: Request a specific file to be deleted
    package:
      include:
        - metafiles.js
        - shared/**
    events:
      - http:
          path: /{brand}/category/{category}/{modelid}/files/{filename}
          method: delete
          cors: true
          request:
            parameters:
              paths:
                brand: true
                category: true
                modelid: true
                filename: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:eu-central-1:338756162532:userpool/eu-central-1_Qg8GXUJ2v