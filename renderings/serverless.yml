service: RENDERINGS # NOTE: update this with your service name
#app: your-app-name
#tenant: your-tenant-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

custom:
  myStage: ${opt:stage, self:provider.stage}
  myEnvironment:
    MESSAGE:
      prod: "This is production environment"
      dev: "This is development environment"
  users-role: arn:aws:iam::338756162532:role/ARCMSLambda
  ec2-role: arn:aws:iam::338756162532:role/ARCMSLambda-EC2

provider:
  name: aws
  stage: dev
  runtime: nodejs10.x
  region: eu-central-1
  environment:
    NEWORDERTOPIC: new-glasses-order-${self:custom.myStage}
    MESSAGE: ${self:custom.myEnvironment.MESSAGE.${self:custom.myStage}}
    CANDIDATE_TABLE: arcms-brandUserOrders-${self:custom.myStage}
    IMAGE_BUCKET: looc-cloud-images
    MODEL_BUCKET: ar-glasses-models
    RENDERING_BUCKET: looc-renderings
    STAGE: ${self:custom.myStage}
    ACCESS_STORE: store
    ACCESS_MANAGER: manager
    ACCESS_ADMIN: admin

package:
  individually: true
  exclude:
    - "**/*"
    - node_modules/**

functions:
  get:
    handler: renderings.get
    role: ${self:custom.users-role}
    memorySize: 512
    description: Get an array of renderings, optionally filtered by collection and model, paginated
    package:
      include:
        - renderings.js
        - shared/**
    events:
      - http:
          path: /{brand}/renderings
          method: get
          cors: true
          request:
            parameters:
              paths:
                brand: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:eu-central-1:338756162532:userpool/eu-central-1_Qg8GXUJ2v

  new:
    handler: renderings.new
    role: ${self:custom.ec2-role}
    memorySize: 512
    description: Post the configuration for a requested rendering, 
    package:
      include:
        - renderings.js
        - shared/**
    events:
      - http:
          path: /{brand}/renderings
          method: post
          cors: true
          request:
            parameters:
              paths:
                brand: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:eu-central-1:338756162532:userpool/eu-central-1_Qg8GXUJ2v

  update-rendering-result:
    handler: renderings.finished
    role: ${self:custom.users-role}
    memorySize: 512
    description: Update the metadata in the DB when a rendering has finished
    package:
      include:
        - renderings.js
        - shared/**

  save-rendering-logs:
    handler: renderings.savelog
    role: ${self:custom.users-role}
    memorySize: 512
    description: Save the link to the logfile into the db
    package:
      include:
        - renderings.js
        - shared/**


  update-rendering-status:
    handler: renderings.updateStatus
    role: ${self:custom.users-role}
    memorySize: 512
    description: Update the status of the current rendering
    package:
      include:
        - renderings.js
        - shared/**